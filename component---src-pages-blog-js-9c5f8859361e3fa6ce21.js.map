{"version":3,"sources":["webpack://aea-web/./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://aea-web/./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js","webpack://aea-web/./src/pages/blog.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","forwardRef","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","chakra","__css","__DEV__","displayName","SimpleGrid","count","width","columns","spacingX","spacingY","spacing","minChildWidth","mapResponsive","value","isNull","n","isNumber","data","px","py","maxW","mx","size","mb","allMdx","edges","map","post","link","node","slug","id","base","lg","alignItems","Link","to","frontmatter","title","author","date","excerpt","colorScheme","as","minH","image","fluid","childImageSharp"],"mappings":"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","file":"component---src-pages-blog-js-9c5f8859361e3fa6ce21.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", minmax(0, 1fr))\";\n  });\n}","import { Box, Heading, Text, Button, SimpleGrid } from '@chakra-ui/react';\nimport { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport Img from 'gatsby-image'\n\nconst Blog = ({data}) => {\n  \n  return ( \n    <>\n      <Box px={6} py={28} maxW={1200} mx=\"auto\">\n        <Heading size=\"4xl\" mb={12}>Blog</Heading>\n        {\n          data.allMdx.edges.map(\n            post => {\n              const link = `/${post?.node?.slug}`\n\n              return (\n                <SimpleGrid key={post.node.id} columns={{base: 1, lg: 2}} spacing={12} alignItems=\"center\">\n                  <Box>\n                    <Link to={link}><Heading mb={6}>{post?.node?.frontmatter.title}</Heading></Link>\n                    <Heading size=\"md\" mb={6}>{post?.node?.frontmatter.author} · {post?.node?.frontmatter.date}</Heading>\n                    <Text mb={6}>{post?.node?.frontmatter.excerpt}</Text>\n                    <Button colorScheme=\"pink\" as={Link} to={link}>Read now</Button>\n                  </Box>\n                  <Link to={link}>\n                    <Box minH={400}>\n                      {post?.node?.frontmatter?.image && <Img fluid={post?.node?.frontmatter?.image?.childImageSharp?.fluid} />}\n                    </Box>\n                  </Link>\n                </SimpleGrid>\n              )\n            }\n          )\n        }\n      </Box>\n    </> );\n}\n\nexport const data = graphql`\nquery BlogQuery {\n  allMdx(\n    sort: {fields: frontmatter___date}\n    filter: {frontmatter: {published: {eq: true}}}\n    ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          author\n          excerpt\n          image {\n            childImageSharp {\n              fluid(maxWidth: 600, maxHeight: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          date(formatString: \"Do MMMM YYYY\")\n        }\n        slug\n      }\n    }\n    }\n}`\n \nexport default Blog;"],"sourceRoot":""}